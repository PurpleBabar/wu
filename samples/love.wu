-- disclaimer: might not compile yet

WIDTH  :: love graphics getWidth()
HEIGHT :: love graphics getHeight()

SPEED :: 20

struct point {
  x: float
  y: float
}

struct player {
  position: point
}

implement player {
  new :: (x: float, y: float) player -> player {
    position: point {
       x: x
       y: y
    }
  }

  translate :: (self, dx: float, dy: float) -> {
    self x += dx
    self y += dy
    
    self x, self y = self x % WIDTH, self y % HEIGHT
  }
}

bob := player new(WIDTH / 2, HEIGHT / 2)

love update :: (dt: float) -> {
  key :: love keybaord isDown("left")

  dx :: match key {
    | "left" -> -SPEED
    | "right -> SPEED
  }
  
  dy :: match key {
    | "up"   -> -SPEED
    | "down" -> SPEED
  }
  
  player translate(dx * dt, dy * dt)
}
